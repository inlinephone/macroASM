;   БИБЛИОТЕКА МАКРОСОВ. ШАПАР ВЛАДИСЛАВ ИКБО-3-15

;======================================================================================================================================================================	
;======================================================================================================================================================================
;============================================                          МАКРОСЫ                            =============================================================

;*********************************   ВЫВОД ЛОГОТИПА   ************************************

OUTLOGO:	MACRO	&LENLOGO,&TXT_LOGO
	CLEAR	X
$M0CLOGO:	LDB	A,&TXT_LOGO[X]	
	WD	#0			
	INCM	X,#&LENLOGO			
	JLT	$M0CLOGO
	MEND

;*********************************   ВЫВОД СТРОКИ   ************************************

OUTSTR:	MACRO	&LEN,&TXT
	LD	R11,#&LEN
	LD	X,#&TXT
	ADDR	R11,X
$M0C:	+LDB	A,0[X]	
	WD	#0			
	INCR	X,R11			
	JLT	$M0C
	MEND																																																																	

;*********************************   ВЫВОД ЧИСЛА   ************************************	
				
OUTNUM:	MACRO
	CLEAR	R8
	COMPR	R7,R0	; Детектор отрицательного значения
	JLT	$PUTMINUS
$CICLE:	MOV 	R5,R7	; Помещение цифры в стек
	DIVR	R7,R10
	MOV	A,R7
	MULR	A,R10
	SUBR	R5,A
	MOV	A,R5
	PUSH	A
	ADD	R8,#1			
	COMPR	R7,R0			
	JGT	$CICLE
	JMP	$EXTRACT
$PUTMINUS:	LDB	A,#45	; Вывод минуса
	WD	#0
	MULR	R7,R1
	JMP	$CICLE	
$EXTRACT:	POP	A	; Выброс цифр из стека на устройство вывода
	ADDR	A,R3
	WD	#0
	SUB	R8,#1
	COMPR	R8,R0
	JGT	$EXTRACT
	RET
	MEND
			
;*********************************   ВЫВОД МАССИВА ЧИСЕЛ   ************************************	

OUTMASS:	MACRO	
	JMP 	$OUTMSS
$BEFOREPART:	LDB	A,#44
	WD	#0
	LDB	A,#32
	WD	#0
$OUTMSS:	+LD	R7,0[X]
	CALL	OUTSTACK
	ADD	X,#4	
	COMPR	X,R11
	JLT	$BEFOREPART	
	RET
	MEND						
			
;*********************************   АЛГОРИТМ РЕШЕНИЯ ЗАДАЧИ   ************************************									
						
ALG:	MACRO	&LENGTH,&MASS
	CLEAR	R0	; Запись часто используемых данных в регистры.	
	LD	R1,#-1
	LD	R2,#2
	LD	R3,#48
	LD	R4,#4
	LD	R10,#&LENGTH
	LD	X,#&MASS
	MOV	R11,X
	ADDR	R11,R10
	LD	R10,#10
	CALL	MOUTSTACK
	LD	X,#&LENGTH
	SUB	X,#4	
$LOAD:	+LD	A,&MASS[X]	; Загрузка элемента массива в регистр А
$PROCESS:	COMPR	A,R0	; Проверка на положительность элемента (ОСНОВНОЙ АЛГОРИТМ)
	JLT	$ABS	
	MOV	R5,A	; Сохраняем модуль элемента массива
	DIVR	A,R2	; Делим нацело на 2
	MULR	A,R2	; умножаем на 2
	INCR	A,R5	; Если начальные и конечные числа совпадут, то это -чётное, иначе - нечётное, с разницей в 1
	JEQ	$RES	
	SUBR	X,R4	
	COMPR	X,R1	; Проверка на окончание массива
	JGT	$LOAD	
	JMP	$RES	; Вывод результата	

$ABS:	MULR	A,R1	; Нахождение модуля числа	
	JMP	$PROCESS
$RES:	MEND